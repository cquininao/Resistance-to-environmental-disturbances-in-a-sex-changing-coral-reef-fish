%% IBM Model
%% to compute the empirical probability of extinction
%% take different values of the number of anemones to construct the plot 5

% for reproducibility
rng(1)
% Survival probability
s = struct('J',0.28,'NB1',0.75,'NB2',0.51,'M1',0.75,'M2',0.51,'F1',0.37,'F2',0.59);
s0 = 0.0005; % estimation of larva survival
% maturing probability
gamma1 = 0.56;
gamma2 = 0.40;
gamma = struct('NB1',gamma1,'M1',gamma1,'M2',gamma2,'F1',gamma2);
% fecundity
f1 = 30000;
f2 = 42500;
f = struct('F1',f1,'F2',f2);
% density dependant function
beta1 = 0.001;
beta0 = 0.01;
beta = struct('J',beta0,'NB1',beta0,'NB2',beta0,'M1',beta0,'M2',beta0);

% Time parameters
T = 50;
dt = 1;
t0 = 1;
t = t0:dt:T;
ntimes = length(t);

% Variables and setting of the system
N_anemones = 10;
capacity = 10;
Y = zeros(N_anemones,8);
X = zeros(1,8); % JuvenilesM - JuvenileF - NonBreedersS - NonBreedersL - Male - Female

M = 1000;
SUR = zeros(M,ntimes);
for iter = 1:M
    X = zeros(1,8);
    for i = 1:N_anemones
        X(8) = randi(2)-1;
        X(7) = randi(2-X(8))-1;
        X(6) = randi(2)-1;
        X(5) = randi(2-X(6))-1;
        X(4) = randi(capacity-sum(X(5:end)))-1;
        X(3) = randi(max(0,capacity-sum(X(4:end))))-1;
        X(2) = randi(max(0,capacity-sum(X(3:end))))-1;
        X(1) = randi(max(0,capacity-sum(X(2:end))))-1;
        Y(i,:) = X(1,:);
    end
    for n = 2:T
        for i = 1:N_anemones
            flag = 0;
            eggs = 0;
            X = Y(i,:);

            % Females
            if X(8) == 1
                X(8) = rand<s.F2;
                eggs = poissrnd(f.F2);
                eggs = binornd(eggs,s0)*((X(6)+X(5))>0);
            elseif X(7) == 1
                grow = rand<gamma.F1;
                survive = rand<s.F1;
                X(8) = grow*survive;
                X(7) = (1-grow)*survive;
                eggs = poissrnd(f.F2);
                eggs = binornd(eggs,s0)*((X(6)+X(5))>0);
            end
            if X(2)>0
                vphi = (X(7)==0);
                survive = binornd(X(2),s.J);
                X(7) = (survive>0)*vphi;
            end

            % Males
            if X(6) == 1
                survive = rand<s.M2;
                X(6) = survive;
            elseif X(5) == 1
                grow = rand<gamma.M1;
                flag = grow;
                survive = rand<s.M1;
                X(6) = survive*grow;
                X(5) = survive*(1-grow);
            end

            % Nonbreeders
            if X(4) > 0
                vphi = (X(6)==0);
                survive = binornd(X(4),s.NB2);
                X(6) = (survive>0)*vphi;
                X(4) = max(survive-1,0)*vphi+survive*(1-vphi);
            end
            if X(3) > 0
                vphi = sum(X(5:6))==0;
                survive = binornd(X(3),s.NB1);
                grow = binornd(survive,gamma.NB1)*flag;
                X(6) = (grow*vphi)>0;
                X(5) = ((survive-grow)*vphi)>0;
                X(4) = grow*(1-vphi);
                X(3) = (survive-grow)*(1-vphi) + max(0,(survive-1))*vphi;
            end
            if X(1) > 0
                vphi = sum(X(5:6))==0;
                survive = binornd(X(1),s.J);
                X(5) = (survive>0)*vphi;
                X(3) = survive*(1-vphi)+max(survive-1,0)*vphi;
            end
            X(1) = ceil(eggs/2/(N_anemones-1));
            X(2) = ceil(eggs/2/(N_anemones-1));
            Y(i,:) = X;
        end
        eggsM = Y(:,1);
        eggsF = Y(:,2);
        for i = 1:N_anemones
            eggsiM = sum(eggsM)-eggsM(i);
            eggsiF = sum(eggsF)-eggsF(i);
            Y(i,1) = eggsiM;
            Y(i,2) = eggsiF;
            if sum(Y(i,:))>capacity
                Y(i,2) = ceil((capacity-sum(Y(i,3:end)))/2);
                Y(i,1) = floor((capacity-sum(Y(i,3:end)))/2);
            end
        end
        SUR(iter,n) = sum(sum(Y));
    end
    if mod(iter,1000)==0
        disp(iter)
    end
end
disp(nnz(SUR(:,end))/M)

% OutPut when simulated for n_anemones from 2 to 10
% ProbGon = 1-[0.002 0.081 0.358 0.553 0.712 0.821 0.900 0.952 0.970];

%% nonlinear markov chain
%% the impact of catastrophic disturbances
%% figure 3a: impact only in fecundity

M = 1000;
T = 150;

% Survival probability
s = struct('J',0.28,'NB1',0.75,'NB2',0.51,'M1',0.75,'M2',0.51,'F1',0.37,'F2',0.59);
s0 = 0.0005; % estimation of larva survival
% maturing probability
gamma1 = 0.56; %0.58
gamma2 = 0.40; %0.41
gamma = struct('NB1',gamma1,'M1',gamma1,'M2',gamma2,'F1',gamma2);
% fecundity
f1 = 30000; % eggs per year
f2 = 42500; % eggs per year
f = struct('F1',f1,'F2',f2);
% density dependant function
beta1 = 0.001;
beta0 = 0.01;
beta = struct('J',beta0,'NB1',beta0,'NB2',beta0,'M1',beta0,'M2',beta0);

% Time parameters
dt = 1;
t0 = 1;
t = t0:dt:T;
ntimes = length(t);
X = zeros(ntimes,7);

% Initial conditions
rng(1) % seed for replicability
% Directed graph
AM = Acontrol(2,7);
tolerance = 1;
incremento = 0.05;
vector = 0:incremento:1;
nvector = length(vector);
n_factor = 10;
factor_V = [
    linspace(0.00,0.05,n_factor);...%0.00   1
    linspace(0.00,0.05,n_factor);...%0.05   2
    linspace(0.00,0.05,n_factor);...%0.10   3
    linspace(0.00,0.05,n_factor);...%0.15   4
    linspace(0.00,0.05,n_factor);...%0.20   5
    linspace(0.00,0.05,n_factor);...%0.25   6
    linspace(0.00,0.05,n_factor);...%0.30   7
    linspace(0.00,0.05,n_factor);...%0.35   8
    linspace(0.00,0.05,n_factor);...%0.40   9
    linspace(0.00,0.05,n_factor);...%0.45   10
    linspace(0.00,0.05,n_factor);...%0.50   11
    linspace(0.00,0.10,n_factor);...%0.55    12
    linspace(0.00,0.20,n_factor);...%0.60   13
    linspace(0.00,0.20,n_factor);...%0.65   14
    linspace(0.00,0.22,n_factor);...%0.70   15
    linspace(0.00,0.22,n_factor);...%0.75   16
    linspace(0.00,0.22,n_factor);...%0.80   17
    linspace(0.05,0.25,n_factor);...%0.85   18
    linspace(0.09,0.25,n_factor);...%0.90   19
    linspace(0.17,0.27,n_factor);...%0.95   20
    linspace(0.25,0.26,n_factor);...%1.0   21
];
PROB = zeros(n_factor,nvector);
for j0 = 1:nvector
    for i0 = 1:n_factor
        YPop = zeros(M,ntimes);
        % Perturbaciones
        occ = (j0-1)*incremento;
        factor = factor_V(j0,i0);
        fAlt = struct('F1',f.F1*factor,'F2',f.F2*factor);
        for mon = 1:M
            X(1,:) = randi(100,1,7);
            YPop(mon,1) = sum(X(1,:));
            for n = 2:T
                lambdaJ = 1/(1+beta1*X(n-1,1));
                vphi = Phi(X(n-1,:),beta,AM);
                sAux = s;
                s0Aux = s0;
                fAux = f;
                if rand < occ
                    fAux = fAlt;
                end
                CM = Adec(s,gamma,lambdaJ,vphi,fAux,s0);
                X(n,:) = X(n-1,:)*CM;
                YPop(mon,n) = sum(X(n,:));
            end
        end
        PROB(i0,j0) = sum(YPop(:,end)>tolerance)/M;
    end
    disp(j0)
    disp(PROB(:,j0)')
end

fig = figure(1);
hold off
Xq = zeros(nvector*(n_factor+2),1);
Yq = zeros(nvector*(n_factor+2),1);
Zq = zeros(nvector*(n_factor+2),1);
for j0 = 1:nvector
    yq = (j0-1)*incremento*ones(n_factor+2,1);
    xq = 1-[0 factor_V(j0,:) 1];
    if j0 < 11
        zq = [1 PROB(:,j0)' 1];
    else
        zq = [PROB(1,j0) PROB(:,j0)' 1];
    end
    zq = 1-zq;
    Xq(1+(j0-1)*(n_factor+2):j0*(n_factor+2)) = xq;
    Yq(1+(j0-1)*(n_factor+2):j0*(n_factor+2)) = yq;
    Zq(1+(j0-1)*(n_factor+2):j0*(n_factor+2)) = zq;
    plot3(xq,yq,zq,'k')
    hold on
end
plot3([0.74 0.74],[0 1],[0 0],'-.','Color',"#0072BD",'LineWidth',2)
ylabel('occurrence', 'Rotation',0)
xlabel('strength', 'Rotation',0)
zlabel('probability of extinction')
% triangulate and plot
tri = delaunay(Xq, Yq);
trisurf(tri, Xq, Yq, Zq);
shading interp
colormap(sky)
alpha(0.8)
fontsize(fig, 20, "points")
text(0.01,0.94,0.94, '(a)', 'Color', 'k', 'FontSize', 20)
